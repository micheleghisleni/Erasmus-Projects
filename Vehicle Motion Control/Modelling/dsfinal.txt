#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
       5                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
      10                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(52,27)
g
APed
F_xReq
T_PmReq1
T_PmMax
P_PmMax
J_Pm
TimeConstant
T_PmReq2
T_PmInternal
der(T_PmInternal)
T_Pm
w_Pm
der(w_Pm)
Ratio
T_WhlRot
der(T_WhlRot)
w_WhlRot
C_Drv
w_Drv
C_z
D_z
J_y
w_b
der(w_b)
v_zr
v_zf
der(v_zf)
F_sr
der(F_sr)
F_dr
F_sf
der(F_sf)
F_df
Radius
J_Whl
CC_x
mu_Peak
F_xWhl
F_zWhl
s_x
m
lf
lr
h
v_x
der(v_x)
F_rz
ModelTyreSlip
ModelWheelInertia
ModelTyreFrictionSaturation
v_Eps

double initialValue(52,6)
 -2  9.8066499999999994E+00  0       0                  6  256   # g
 -2       1                  0       0                  6  320   # APed
 -2  1.4709974999999999E+04  0       0                  6  320   # F_xReq
 -2  4.4129924999999997E+02  0       0                  6  320   # T_PmReq1
 -2     200                  0       0                  6  256   # T_PmMax
 -2   20000                  0       0                  6  256   # P_PmMax
 -1  2.5000000000000000E-01  0       0                  1  280   # J_Pm
 -1  5.0000000000000003E-02  0       0                  1  280   # TimeConstant
 -2  6.6389951756925711E+01  0       0                  6  256   # T_PmReq2
 -2  6.6860273471296424E+01  0       0                  2  280   # T_PmInternal
 -2 -9.4064342874142426E+00  0       0                  3  256   # der(T_PmInternal)
 -2  5.6414651502143954E+01  0       0                  6  256   # T_Pm
 -2  3.0125040718851898E+02  0       0                  2  280   # w_Pm
 -2  4.1782487876609878E+01  0       0                  3  256   # der(w_Pm)
 -1      10                  0       0                  1  280   # Ratio
 -2  5.6414651502143954E+02  0       0                  2  280   # T_WhlRot
 -2 -7.9510875887933707E+01  0       0                  3  256   # der(T_WhlRot)
 -2  3.0128497713455722E+01  0       0                  6  288   # w_WhlRot
 -1   23000                  0       0                  1  280   # C_Drv
 -2  3.0125040718851899E+01  0       0                  6  256   # w_Drv
 -1   30000                  0       0                  1  280   # C_z
 -1    2500                  0       0                  1  280   # D_z
 -1    3000                  0       0                  1  280   # J_y
 -2  8.8641718361401258E-04  0       0                  2  280   # w_b
 -2 -6.6529793168835269E-04  0       0                  3  256   # der(w_b)
 -2  1.3296257754210189E-03  0       0                  6  256   # v_zr
 -2 -1.1080214795175158E-03  0       0                  6  256   # v_zf
 -2  8.3162241461044088E-04  0       0                  6  256   # der(v_zf)
 -2 -6.9624761406446814E+03  0       0                  2  272   # F_sr
 -2  3.9888773262630565E+01  0       0                  3  256   # der(F_sr)
 -2  3.3240644385525475E+00  0       0                  6  256   # F_dr
 -2  2.3010322326449565E+02  0       0                  2  280   # F_sf
 -2 -3.3240644385525471E+01  0       0                  3  256   # der(F_sf)
 -2 -2.7700536987937894E+00  0       0                  6  256   # F_df
 -1  2.9999999999999999E-01  0       0                  1  280   # Radius
 -1  5.0000000000000000E-01  0       0                  1  280   # J_Whl
 -1      20                  0       0                  1  280   # CC_x
 -1  5.9999999999999998E-01  0       0                  1  280   # mu_Peak
 -2  1.8804883834047985E+03  0       0                  6  256   # F_xWhl
 -2  7.7508229237938694E+03  0       0                  6  256   # F_zWhl
 -2  1.2130895015237543E-02  0       0                  6  256   # s_x
 -1    1500                  0 1.0000000000000000E+100  1  280   # m
 -1  1.2500000000000000E+00  0       0                  1  280   # lf
 -1  1.5000000000000000E+00  0       0                  1  280   # lr
 -1  4.0000000000000002E-01  0       0                  1  280   # h
 -2  8.9289036212180903E+00  0       0                  2  272   # v_x
 -2  1.2536589222698657E+00  0       0                  3  256   # der(v_x)
 -2  6.9591520762061291E+03  0       0                  6  256   # F_rz
 -2       1                  0       0                  6  257   # ModelTyreSlip
 -2       0                  0       0                  6  257   # ModelWheelInertia
 -2       0                  0       0                  6  257   # ModelTyreFrictionSaturation
 -1  1.0000000000000000E-03  0       0                  1  280   # v_Eps


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, the initialization is performed in the normal way.
#
# - If parameters and inputs are FIXED, and all other variables
#   have special case for continue (-2 in 1st column), or FREE
#   the initialization is ignored and variables are set to these values.
#   This is intended to continue the simulation.
#
#   Which variables will be important for initialization and continue
#   is indicated by value in column 6 & dsStartMasks.
#
char initialDescription(52,18)
[m/s2]
[1]
[N]
[N.m]
[N.m]
[W]
[kg.m2]
[s]
[N.m]
[N.m]
[W]
[N.m]
[rad/s]
[rad/s2]
[1]
[N.m]
[W]
[rad/s]
[N.m/rad]
[rad/s]
[N/m]
[N.s/m]
[kg.m2]
[rad/s]
[rad/s2]
[m/s]
[m/s]
[m/s2]
[N]
[N/s]
[N]
[N]
[N/s]
[N]
[m]
[kg.m2]
[1]
[1]
[N]
[N]
[1]
[kg]
[m]
[m]
[m]
[m/s]
[m/s2]
[N]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[m/s]

